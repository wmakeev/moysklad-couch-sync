'use strict'

const url = require('url')
const AWS = require('aws-sdk')

function encodeSpecialCharacters (filename) {
  // Note: these characters are valid in URIs, but S3 does not like them for
  // some reason.
  return encodeURI(filename).replace(/[!'()* ]/g, function (char) {
    return '%' + char.charCodeAt(0).toString(16)
  })
}

function getPublicUrlHttp (bucket, key) {
  var parts = {
    protocol: 'http:',
    hostname: bucket + '.s3.amazonaws.com',
    pathname: '/' + encodeSpecialCharacters(key)
  }
  return url.format(parts)
}

function awsStorage (sb) {
  /**
   * Local file upload
   * @param {{ key: string, body: Buffer|String|Stream, contentType: string }} data Data for upload
   * @param options
   * @param cb
   */
  function upload (data, options, cb) {
    var s3 = new AWS.S3(options.config)
    // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property
    var response = s3.putObject(Object.assign({}, options.params, {
      Key: data.key,
      Body: data.body,
      ContentType: data.contentType
    }), function (err, result) {
      if (err) return cb(err)
      result.url = getPublicUrlHttp(options.params.Bucket, data.key)
      cb(null, result)
    })

    // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/Request.html
    // AWS S3 limitation - https://github.com/aws/aws-sdk-js/issues/94
    response.on('httpUploadProgress', function (progress) {
      sb.emit('upload/progress', {
        key: data.key,
        loaded: progress.loaded,
        total: progress.total,
        progress: Math.round(progress.loaded / (progress.total / 100))
      })
    })
  }

  return {
    init: function (options) {
      AWS.config.apiVersions.s3 = options.apiVersion || '2006-03-01'

      sb.on('upload/file', function (data, channel, reply) {
        upload(data, options, reply)
      })
    }
  }
}

module.exports = awsStorage
